= 介绍 =

现rapid是典型的三层结构, dao,service,web controller三层.
其中dao层及web controller层只需安装不同的插件再修改相关配置即可以切换的.


= dao层切换=

{{{
hibernate dao
	1.修改配置文件: src/resource/spring/applicationContext-dao.xml
		1.1修改sessionFactory.hibernateProperties的数据库方言(Dialect)属性,默认为MysqlDialect
		(*)1.2修改sessionFactory的packagesToScan以确定要加载的@Entity类,默认加载com.**.model
		(*)1.3修改context:component-scan节点属性以确定要加载的dao,默认加载com.**.dao
	2.主键生成策略修改:简单主键修改generator.properties的hibernate_id_generator即可,复杂主键如sequence请直接修改${className}.java,默认为increment
ibatis dao
	1.修改配置文件: src/resource/spring/applicationContext-dao.xml
		1.1修改dialect,以支持不同的数据库分页查询. 默认值为:MySQLDialect (注:该项为rapid的扩展)
		(*)1.2修改sqlMapClient的mappingLocations以确定要加载的SqlMap.xml,默认值为:classpath*:/com/**/model/**/*SqlMap.xml
		(*)1.3修改context:component-scan节点属性以确定要加载的dao,默认加载com.**.dao
	3.主键生成策略修改,修改${className}SqlMap.xml中的<selectKey>节点,默认是使用mysql 的auto_increment
ibatis3 dao
	1.修改配置文件: src/resource/Configuration.xml
		1.1修改dialect,以支持不同的数据库分页查询. 默认值为:MySQLDialect (注:该项为rapid的扩展)
		(*)1.2代码生成以后为Configuration.xml增加Mapper.xml的配置
	3.主键生成策略修改,修改${className}Mapper.xml中的insert节点,默认是适用mysql 的auto_increment(sqlserver的identity也适用)	
spring jdbc dao
	1.修改配置文件: src/resource/spring/applicationContext-dao.xml
		1.1修改dialect,以支持不同的数据库分页查询. 默认值为:MySQLDialect
		(*)1.2修改context:component-scan节点属性以确定要加载的dao,默认加载com.**.dao
	2.主键生成策略修改
		2.1修改模板${className}Dao.java中的save()方法; 默认适用mysql auto_increment及sqlserver identity
		2.2其它生成策略为
			sqlserver identity: insertWithIdentity(entity,sql);
			oracle sequence: insertWithOracleSequence(entity,sequenceName,insertSql);
			db2 sequence: insertWithDB2Sequence(entity,sequenceName,insertSql);
			uuid: insertWithUUID(entity,insertSql);
			手工分配: insertWithAssigned(entity,insertSql)

}}}

= web 框架切换 = 
{{{
strust
    配置文件web/WEB-INF/struts-config.xml
    根据你的包结构修改struts的通配符配置

struts2
    配置文件src/resources/struts.xml
    修改说明:
     1.修改pakcage的namespace属性,因为URL访问规则是: /namesapce/Entity/method.do 
     2.根据你的包结构修改action节点的class属性 
springmvc
    配置文件:web/WEB-INF/springmvc-servlet.xml
	修改说明:
	1.修改class=ControllerClassNameHandlerMapping节点的pathPrefix以确定URL生成的前缀,URL规则为/pathPrefix/Entity/method.do,类似struts2的nemespace
	(*)2.修改context:component-scan以确定要加载的controller,默认为com.**.controller
springmvc_rest
    配置文件:web/WEB-INF/springmvc-servlet.xml
	修改说明:
	(*)1.修改context:component-scan以确定要加载的controller,默认为com.**.controller
	注意: springmvc_rest的URL访问规则示例为: http://localhost:8080/${context}/userinfo
}}}