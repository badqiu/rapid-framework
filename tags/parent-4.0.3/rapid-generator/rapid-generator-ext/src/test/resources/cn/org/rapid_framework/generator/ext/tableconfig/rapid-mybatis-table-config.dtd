<?xml version="1.0" encoding="UTF-8" ?>

<!ELEMENT table (column* | resultmap* | operation* | sql*)+>
<!ATTLIST table
namespace CDATA #IMPLIED
remarks CDATA #IMPLIED
sqlname CDATA #IMPLIED
dummypk CDATA #IMPLIED
package CDATA #IMPLIED
subpackage CDATA #IMPLIED
sequence CDATA #IMPLIED
autoswitchdatasrc CDATA #IMPLIED
doname CDATA #IMPLIED
>

<!ELEMENT column EMPTY>
<!ATTLIST column
name CDATA #REQUIRED
javatype CDATA #REQUIRED
>

<!ELEMENT resultmap (column)*>
<!ATTLIST resultmap
name CDATA #REQUIRED
>

<!ELEMENT operation (extraparams | sql | sqlmap)*>
<!ATTLIST operation
name CDATA #REQUIRED
paging CDATA #IMPLIED
paramtype CDATA #IMPLIED
multiplicity (one|many|paging) #IMPLIED
remarks CDATA #IMPLIED
>

<!ELEMENT extraparams (param)*>

<!ELEMENT param EMPTY>
<!ATTLIST param
name CDATA #REQUIRED
javatype CDATA #REQUIRED
>

<!ELEMENT sql (#PCDATA | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST sql
id CDATA #IMPLIED
>

<!ELEMENT sqlmap (#PCDATA | include | trim | where | set | foreach | choose | if)*>

<!--The <include> tag can be used to insert SQL code fragments defined by the <sql> tag into
a SQL statement. Here is a short example:
<br>
Example:<br>
&lt;sql id="selectItem_fragment"&gt;<br>
	FROM items<br>
	WHERE parentid = 6<br>
&lt;/sql&gt;<br>

&lt;select id="selectItemCount" resultClass="int"&gt;<br>
	SELECT COUNT(*) AS total<br>
	<include refid="selectItem_fragment"/><br>
&lt;/select&gt;<br>

&lt;select id="selectItems" resultClass="Item"&gt;<br>
	SELECT id, name<br>
	&lt;include refid="selectItem_fragment"/><br>
&lt;/select&gt;-->
<!ELEMENT include EMPTY>
<!ATTLIST include
refid CDATA #REQUIRED
>

<!--Many relational database systems support auto-generation of primary key fields. This feature of the
RDBMS is often (if not always) proprietary. Data Mapper supports auto-generated keys via the
<selectKey> stanza of the <insert> element. Both pre-generated keys (e.g. Oracle) and post-generated
(MS-SQL Server) keys are supported.
The selectKey statement is executed before the insert statement if it is placed before the insert SQL,
otherwise the selectKey statement is executed after the insert statement. In the previous examples, the
Oracle example shows that the selectKey will be executed before the insert statement (as is appropriate for
a sequence). The SQL Server example shows that the selectKey statement will be executed after the insert
statement (as is appropriate for an identity column).
With iBATIS versions 2.2.0 and later, you can explicitly state the order of execution of the statements if
you wish. The selectKey element supports an attribute type that can be used to explicitly set the execution
order. The value of the type attribute can be either “pre” or “post” - meaning that the statement will be
executed before or after the insert statement. If you specify the type attribute, then the value you specify
will be used regardless of the position of the selectKey element.-->
<!ELEMENT selectKey (#PCDATA | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST selectKey
resultType CDATA #IMPLIED
statementType (STATEMENT|PREPARED|CALLABLE) #IMPLIED
keyProperty CDATA #IMPLIED
order (BEFORE|AFTER) #IMPLIED
>

<!-- - - - - - - - - - - - - - - - - - - - - - - - -
                 DYNAMIC ELEMENTS
  - - - - - - - - - - - - - - - - - - - - - - - - -->

<!-- Dynamic -->

<!ELEMENT include EMPTY>
<!ATTLIST include
refid CDATA #REQUIRED
>

<!ELEMENT sql (#PCDATA | selectKey | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST sql
id CDATA #REQUIRED
>

<!ELEMENT trim (#PCDATA | selectKey | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST trim
prefix CDATA #IMPLIED
prefixOverrides CDATA #IMPLIED
suffix CDATA #IMPLIED
suffixOverrides CDATA #IMPLIED
>
<!ELEMENT where (#PCDATA | include | trim | where | set | foreach | choose | if)*>
<!ELEMENT set (#PCDATA | include | trim | where | set | foreach | choose | if)*>

<!ELEMENT foreach (#PCDATA | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST foreach
collection CDATA #REQUIRED
item CDATA #IMPLIED
index CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
separator CDATA #IMPLIED
>

<!ELEMENT choose (when* , otherwise?)>
<!ELEMENT when (#PCDATA | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST when
test CDATA #REQUIRED
>
<!ELEMENT otherwise (#PCDATA | include | trim | where | set | foreach | choose | if)*>

<!ELEMENT if (#PCDATA | include | trim | where | set | foreach | choose | if)*>
<!ATTLIST if
test CDATA #REQUIRED
>
