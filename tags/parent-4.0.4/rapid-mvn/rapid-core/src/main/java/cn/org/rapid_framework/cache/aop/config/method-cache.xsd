<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<xsd:schema xmlns="http://rapid-framework.googlecode.com/svn/trunk/schema/method-cache"
		xmlns:xsd="http://www.w3.org/2001/XMLSchema"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:tool="http://www.springframework.org/schema/tool"
		targetNamespace="http://rapid-framework.googlecode.com/svn/trunk/schema/method-cache"
		elementFormDefault="qualified"
		attributeFormDefault="unqualified">

	<xsd:import namespace="http://www.springframework.org/schema/beans" schemaLocation="http://www.springframework.org/schema/beans/spring-beans-2.5.xsd"/>
	<xsd:import namespace="http://www.springframework.org/schema/tool" schemaLocation="http://www.springframework.org/schema/tool/spring-tool-2.5.xsd"/>
	<xsd:annotation>
		<xsd:documentation><![CDATA[
	Defines the elements used in the Rapid Framework's declarative
	cache management infrastructure.
		]]></xsd:documentation>
	</xsd:annotation>

	<xsd:element name="annotation-driven">
		<xsd:complexType>
			<xsd:annotation>
				<xsd:documentation source="java:org.springframework.transaction.annotation.AnnotationTransactionAttributeSource"><![CDATA[
	Indicates that cache configuration is defined by @MethodCache
	annotations on bean classes, and that proxies are automatically
	to be created for the relevant annotated beans.

	The default annotations supported are rapid @MethodCache

				]]></xsd:documentation>
			</xsd:annotation>
			<xsd:attribute name="method-cache" type="xsd:string" default="methodCache">
				<xsd:annotation>
					<xsd:documentation source="cn.org.rapid_framework.cache.Cache"><![CDATA[
	The bean name of the Cache that is to be used
	to drive caches.
	
	This attribute is not required, and only needs to be specified
	explicitly if the bean name of the desired Cache
	is not 'methodCache'.
					]]></xsd:documentation>
					<xsd:appinfo>
						<tool:annotation kind="ref">
							<tool:expected-type type="cn.org.rapid_framework.cache.Cache"/>
						</tool:annotation>
					</xsd:appinfo>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="proxy-target-class" type="xsd:boolean" default="false">
				<xsd:annotation>
					<xsd:documentation><![CDATA[
	Are class-based (CGLIB) proxies to be created? By default, standard
	Java interface-based proxies are created.

	Note: Class-based proxies require the @Transactional annotation to be
	defined on the concrete class. Annotations in interfaces will not work
	in that case (they will rather only work with interface-based proxies)!
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
			<xsd:attribute name="order" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation source="java:org.springframework.core.Ordered"><![CDATA[
	Controls the ordering of the execution of the transaction advisor
	when multiple advice executes at a specific joinpoint.
					]]></xsd:documentation>
				</xsd:annotation>
			</xsd:attribute>
		</xsd:complexType>
	</xsd:element>



</xsd:schema>
