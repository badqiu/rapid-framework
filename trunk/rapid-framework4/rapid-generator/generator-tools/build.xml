<!--
  All rights reserved.
  author: badqiu
{ $Id: build.xml,v 1.4 2007/05/15 07:48:36 baichao_qiu Exp $ }
-->

<!-- ======================================================================= -->
<!-- 生成器ant文件，依赖于maven pom.xml中定义的classpath,及传递相关变量过来  -->
<!-- ======================================================================= -->
<project name="generator" basedir="." default="help">
	<property environment="env"/>

	<property name="dir_dal_project_root" value="target/generator-output/mquery/common/dal"/>
	<property name="dir_templates_root" value="templates"/>

	<!-- 
		generator.tools.class是一些工具类,这些类可以在模板中当工具方法使用,如: {StringUtils.isBlank(something)}
	 	这里写完整的类名称即可,用(逗号,空格,换行符)分隔都可以
	 -->
	<property name="generator_tools_class">
		cn.org.rapid_framework.generator.util.StringHelper,
		org.apache.commons.lang.StringUtils
	</property>
	<property name="generator_sourceEncoding">GBK</property>
	<property name="generator_outputEncoding">GBK</property>
	<property name="gg_isOverride">true</property>
		
	<target name="prepare">
		<path id="lib.classpath" path="${maven.compile.classpath}"></path>
		<echo message="---------- ${lib.classpath} -----------------"/>
		
		<taskdef name="operationGen" classname="cn.org.rapid_framework.generator.ext.ant.OperationGenTask" classpathref="lib.classpath"/>
		<taskdef name="tableConfigGen" classname="cn.org.rapid_framework.generator.ext.ant.TableConfigGenTask" classpathref="lib.classpath"/>
		<taskdef name="tableConfigSetGen" classname="cn.org.rapid_framework.generator.ext.ant.TableConfigSetGenTask" classpathref="lib.classpath"/>
		<taskdef name="tableGen" classname="cn.org.rapid_framework.generator.ext.ant.TableGenTask" classpathref="lib.classpath"/>
		<taskdef name="propertiesLoad" classname="cn.org.rapid_framework.generator.ext.ant.PropertiesLoadTask" classpathref="lib.classpath"/>
		
		<propertiesLoad file="gen_config.xml"/>
		<propertiesLoad file="db.xml"/>
	</target>


	<target name="gen" depends="prepare">
		<tableConfigGen tableConfigFiles="${tableConfigFiles}" input="${dir_templates_root}/table_config/dalgen" output="${dir_dal_project_root}" tableSqlName="${genInputCmd}"  />
		<operationGen tableConfigFiles="${tableConfigFiles}" input="${dir_templates_root}/operation/dalgen" output="${dir_dal_project_root}" tableSqlName="${genInputCmd}"/>
		<tableConfigSetGen tableConfigFiles="${tableConfigFiles}" input="${dir_templates_root}/table_config_set/dalgen" output="${dir_dal_project_root}" />
	</target>

	<target name="table" depends="prepare">
		<tableGen tableSqlName="${genInputCmd}" input="${dir_templates_root}/table/dalgen_config" output="d:/generator-output" openOutputDir="true" description="根据数据库表的metadata生成代码"/>
	</target>

	<target name="seq" depends="prepare">
		<echo>根据sequence生成代码</echo>
		<tableConfigSetGen tableConfigFiles="${tableConfigFiles}" input="${dir_templates_root}/table_config_set/sequence" output="${dir_dal_project_root}" />
	</target>
	
	<target name="help"  >
		<echo>命令行使用: 
ant gen  根据数据库表的配置文件生成代码,(需要有配置文件)
ant table  根据数据库表的生成代码，(不需要有配置文件)
ant seq : 生成oracle sequence生成代码</echo>
	</target>
	

</project>
