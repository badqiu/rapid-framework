<?xml version="1.0" encoding="utf-8"?>
<#assign className = table.className>   
<#assign classNameFirstLower = className?uncap_first>
<#assign underscoreName = table.underscoreName/>
<#assign classNameLowerCase = className?lower_case/>

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="init()"
		 implements="appcommon.flex.base.ILoadData"
		 xmlns:${classNameFirstLower}="${basepackage}.${underscoreName}.view.*"
		 xmlns:pagging="com.wai.components.*">

	<s:layout>

		<s:BasicLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import appcommon.flex.base.*;
			import appcommon.flex.page.*;
			import appcommon.flex.util.*;
			import appcommon.flex.helper.service.*;


			import ${basepackage}.model.*;
			import ${basepackage}.${underscoreName}.*;
			import com.wai.components.events.PaginateEvent;

			import mx.binding.utils.BindingUtils;
			import mx.collections.ArrayCollection;
			import mx.collections.IViewCursor;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.utils.ArrayUtil;

			[Bindable]
			public var ${classNameFirstLower}Map:${className}Map=${className}Map.getInstance();
			[Bindable]
			public var page:Page=new Page();		
			[Bindable]
			public var ${classNameFirstLower}:${className}=new ${className}(); //选中的对象
			
			public var ids:Array=new Array(); //存放选中的id数组


			private function init():void
			{

			}

			public function search(pageNumber:Number=1):void
			{
				if (!${classNameFirstLower}QueryPanel.validate())
				{
					return;
				}
				var pr:PageRequest=new PageRequest();
				pr.filters=${classNameFirstLower}QueryPanel.get${className}();
				pr.pageNumber=pageNumber;
				loadData(pr);
			}

			public function loadData(pageRequest:PageRequest):void
			{
				RemoteHelper.hand("${classNameFirstLower}Service", function(data:Object)
					{
						page=data as Page;
						${classNameFirstLower}Map.put("page", page);
					}).list(pageRequest);

			}


			public function del():void
			{
				AppCrudUtils.confirmDelete(${classNameFirstLower}Grid.getSelectedList(), function():void
					{
						var idList:ArrayCollection=CollectionUtils.select(${classNameFirstLower}Grid.getSelectedList().createCursor(), '${classNameFirstLower}Id');
						ids=idList.toArray();

						RemoteHelper.hand("${classNameFirstLower}Service", function(data:Object)
							{
								CollectionUtils.removeByPropertyEqual(page.result, '${classNameFirstLower}Id', ids);
							}).del(ids);
					});
			}

			public function newRecord():void
			{
				var win:${className}DetailWindow=${className}DetailWindow(PopUpManager.createPopUp(this, ${className}DetailWindow, true));
				win.${classNameFirstLower}=new ${className}();
			}


			public function edit(event:Event):void
			{
				if(event.target.data is ${className}) { 
					var win : ${className}DetailWindow = ${className}DetailWindow(PopUpManager.createPopUp(this,${className}DetailWindow,true));
					win.${classNameFirstLower} = event.target.data;
					win.currentState = "edit";
				}
			}

			public function pageChangeHandler(e:PaginateEvent):void
			{
				search(e.index + 1);
			}
		]]>
	</fx:Script>

	<s:VGroup width="100%"
			  height="100%">
		<mx:Text text="${className}"
				 styleName="moduleTitle"/>

		<${classNameFirstLower}:${className}QueryPanel id="${classNameFirstLower}QueryPanel"
								   styleName="detailForm"
								   width="100%"
								   enter="search()"/>

		<s:HGroup height="35"
				  styleName="crudToolBar"
				  width="100%"
				  verticalAlign="middle"
				  horizontalAlign="right"
				  x="10"
				  y="168">

			<mx:Spacer/>
			<s:Button id="${classNameFirstLower}_search"
					  label="Search"
					  styleName=""
					  click="search()"/>

			<mx:Spacer width="100%"/>

			<s:Button id="${classNameFirstLower}_new"
					  label="New Record"
					  styleName=""
					  click="newRecord()"/>

			<s:Button id="${classNameFirstLower}_delete"
					  label="Delete Record"
					  styleName=""
					  click="del()"/>
			<mx:Spacer/>

		</s:HGroup>
		<${classNameFirstLower}:${className}Grid id="${classNameFirstLower}Grid"
							 doubleClickEnabled="true"
							 doubleClick="edit(event)"
							 change="${classNameFirstLower}=${classNameFirstLower}Grid.selectedItem as ${className}"
							 dataProvider="{page.result}"
							 width="100%"
							 height="100%"/>

		<s:HGroup>

			<pagging:WAIPaginator id="paginator"
								  itemsPerPage="{PageRequest.DEFAULT_PAGE_SIZE}"
								  rangeCount="{5}"
								  itemsTotal="{page.totalCount}"
								  selectedIndex="0"
								  pageChange="pageChangeHandler(event)"/>
			<mx:Text id="resultsIndicator"
					 text="{'Results: ' + String(page.thisPageFirstElementNumber) + ' - ' +
					 String(page.thisPageLastElementNumber) + ' of ' + page.totalCount}"/>
		</s:HGroup>
	</s:VGroup>

</s:Group>
