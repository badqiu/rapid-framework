<?xml version="1.0" encoding="utf-8"?>
<#include "/flex_macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = className?uncap_first>
<#assign underscoreName = table.underscoreName/>
<#assign classNameLowerCase = className?lower_case/>

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="400"
		 height="300">
	
	<s:layout>
		
		<s:BasicLayout />
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		
		<@generateValidator/>
		
		<#-- 生成Validator -->
		<#macro generateValidator>
		<#list table.columns as column>
		<#if !column.pk>
		<#if column.isDateTimeColumn>
		<mx:DateValidator id="${column.columnNameLower}Vld" source="{${column.columnNameLower}Inp}" required="${(!column.nullable)?string}" property="text" allowedFormatChars="-" inputFormat="{${className}.FORMAT_${column.constantName}}"/>
		<#elseif column.isNumberColumn>
		<mx:NumberValidator id="${column.columnNameLower}Vld" source="{${column.columnNameLower}Inp}" required="${(!column.nullable)?string}" property="text"/>
		<#else>
		<mx:StringValidator id="${column.columnNameLower}Vld" source="{${column.columnNameLower}Inp}" required="${(!column.nullable)?string}" property="text"/>
		</#if>
		</#if>
		</#list>
		</#macro>
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import ${basepackage}.model.*;
			
			import appcommon.flex.util.NumberConvertUtils;
			import appcommon.flex.util.ValidatorUtils;
			
			import mx.validators.Validator;
			
			[Bindable]
			public var ${classNameFirstLower}: ${className};
			
			public function get${className}():${className}{
				var ${classNameFirstLower}: ${className} = new ${className}();
				<#list table.columns as column>
					<#if column.pk>
				${classNameFirstLower}.${table.idColumn.columnNameFirstLower} = this.${classNameFirstLower}.${table.idColumn.columnNameFirstLower};
				<#else>
					<#if column.isDateTimeColumn>
				${classNameFirstLower}.${column.columnNameLower} = ${column.columnNameLower}Inp.selectedDate;
				<#elseif column.isNumberColumn>
				${classNameFirstLower}.${column.columnNameLower} = NumberConvertUtils.toNumber(${column.columnNameLower}Inp.text);		
				<#else>
				${classNameFirstLower}.${column.columnNameLower} = ${column.columnNameLower}Inp.text;
				</#if>
			</#if>
		</#list>
				
				return ${classNameFirstLower};
				}
				
				public function validate(): Boolean{
				return ValidatorUtils.validateAll([
					<#list table.columns as column>
						<#if !column.pk>
					${column.columnNameLower}Vld<#if column_has_next>,</#if>
					</#if>
				</#list>
					]);
					}
		]]>
	</fx:Script>
	
	<mx:Form width="100%" height="100%" left="0" top="0">
		<#list table.notPkColumns as column>
		<mx:FormItem label="<@getMxmlColumnLabel column/>">
					 <#if column.isDateTimeColumn>
			<mx:DateField id="${column.columnNameLower}Inp" selectedDate="{${classNameFirstLower}.${column.columnNameLower}}" formatString="{${className}.FORMAT_${column.constantName}}" width="150" editable="true" yearNavigationEnabled="true"/>
					 <#elseif column.isNumberColumn>
			<mx:TextInput id="${column.columnNameLower}Inp" text="{NumberConvertUtils.format(${classNameFirstLower}.${column.columnNameLower})}"/>
					 <#else>
			<mx:TextInput id="${column.columnNameLower}Inp" text="{${classNameFirstLower}.${column.columnNameLower}}"/>
					 </#if>
		</mx:FormItem>
			</#list>
	</mx:Form>
	
</s:Group>
