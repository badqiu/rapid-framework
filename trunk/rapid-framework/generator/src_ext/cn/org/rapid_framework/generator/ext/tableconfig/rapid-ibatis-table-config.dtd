<?xml version="1.0" encoding="UTF-8" ?>

<!ELEMENT table (column* | resultmap* | operation* | sql*)+>
<!ATTLIST table
namespace CDATA #IMPLIED
remarks CDATA #IMPLIED
sqlname CDATA #IMPLIED
dummypk CDATA #IMPLIED
package CDATA #IMPLIED
subpackage CDATA #IMPLIED
sequence CDATA #IMPLIED
autoswitchdatasrc CDATA #IMPLIED
doname CDATA #IMPLIED
>

<!ELEMENT column EMPTY>
<!ATTLIST column
name CDATA #REQUIRED
javatype CDATA #REQUIRED
>

<!ELEMENT resultmap (column)*>
<!ATTLIST resultmap
name CDATA #REQUIRED
>

<!ELEMENT operation (extraparams | sql | sqlmap)*>
<!ATTLIST operation
name CDATA #REQUIRED
paging CDATA #IMPLIED
paramtype CDATA #IMPLIED
multiplicity (one|many|paging) #IMPLIED
remarks CDATA #IMPLIED
>

<!ELEMENT extraparams (param)*>

<!ELEMENT param EMPTY>
<!ATTLIST param
name CDATA #REQUIRED
javatype CDATA #REQUIRED
>

<!ELEMENT sql (#PCDATA | selectKey | include | dynamic | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST sql
id CDATA #IMPLIED
>

<!ELEMENT sqlmap (#PCDATA | selectKey | include | dynamic | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>

<!--The <include> tag can be used to insert SQL code fragments defined by the <sql> tag into
a SQL statement. Here is a short example:
<br>
Example:<br>
&lt;sql id="selectItem_fragment"&gt;<br>
	FROM items<br>
	WHERE parentid = 6<br>
&lt;/sql&gt;<br>

&lt;select id="selectItemCount" resultClass="int"&gt;<br>
	SELECT COUNT(*) AS total<br>
	<include refid="selectItem_fragment"/><br>
&lt;/select&gt;<br>

&lt;select id="selectItems" resultClass="Item"&gt;<br>
	SELECT id, name<br>
	&lt;include refid="selectItem_fragment"/><br>
&lt;/select&gt;-->
<!ELEMENT include EMPTY>
<!ATTLIST include
refid CDATA #REQUIRED
>

<!--Many relational database systems support auto-generation of primary key fields. This feature of the
RDBMS is often (if not always) proprietary. Data Mapper supports auto-generated keys via the
<selectKey> stanza of the <insert> element. Both pre-generated keys (e.g. Oracle) and post-generated
(MS-SQL Server) keys are supported.
The selectKey statement is executed before the insert statement if it is placed before the insert SQL,
otherwise the selectKey statement is executed after the insert statement. In the previous examples, the
Oracle example shows that the selectKey will be executed before the insert statement (as is appropriate for
a sequence). The SQL Server example shows that the selectKey statement will be executed after the insert
statement (as is appropriate for an identity column).
With iBATIS versions 2.2.0 and later, you can explicitly state the order of execution of the statements if
you wish. The selectKey element supports an attribute type that can be used to explicitly set the execution
order. The value of the type attribute can be either “pre” or “post” - meaning that the statement will be
executed before or after the insert statement. If you specify the type attribute, then the value you specify
will be used regardless of the position of the selectKey element.-->
<!ELEMENT selectKey (#PCDATA | include)*>
<!ATTLIST selectKey
resultClass CDATA #IMPLIED
keyProperty CDATA #IMPLIED
type (pre|post) #IMPLIED
>

<!-- - - - - - - - - - - - - - - - - - - - - - - - -
                 DYNAMIC ELEMENTS
  - - - - - - - - - - - - - - - - - - - - - - - - -->

<!--Wrapper tag that allows for an overall prepend, open and close.-->
<!ELEMENT dynamic (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST dynamic
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
>

<!--Checks if a property is not null.-->
<!ELEMENT isNotNull (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isNotNull
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks if a property is null.-->
<!ELEMENT isNull (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isNull
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks if a property is unavailable (i.e not a property of the parameter bean).-->
<!ELEMENT isNotPropertyAvailable (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isNotPropertyAvailable
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #REQUIRED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks if a property is available (i.e is a property of the parameter bean).-->
<!ELEMENT isPropertyAvailable (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isPropertyAvailable
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #REQUIRED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks the equality of a property and a value, or another property.-->
<!ELEMENT isEqual (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isEqual
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
compareProperty CDATA #IMPLIED
compareValue CDATA #IMPLIED
>

<!--Checks the inequality of a property and a value, or another property.-->
<!ELEMENT isNotEqual (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isNotEqual
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
compareProperty CDATA #IMPLIED
compareValue CDATA #IMPLIED
>

<!--Checks if a property is greater than a value or another property.-->
<!ELEMENT isGreaterThan (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isGreaterThan
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
compareProperty CDATA #IMPLIED
compareValue CDATA #IMPLIED
>

<!--Checks if a property is greater than or equal to a value or another property.-->
<!ELEMENT isGreaterEqual (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isGreaterEqual
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
compareProperty CDATA #IMPLIED
compareValue CDATA #IMPLIED
>

<!--Checks if a property is less than a value or another property.-->
<!ELEMENT isLessThan (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isLessThan
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
compareProperty CDATA #IMPLIED
compareValue CDATA #IMPLIED
>

<!--Checks if a property is less than or equal to a value or another property.
<br>
Example Usage:<br>
&lt;isLessEqual prepend=”AND” property=”age” compareValue=”18”&gt;<br>
	ADOLESCENT = ‘TRUE’<br>
&lt;/isLessEqual&gt;-->
<!ELEMENT isLessEqual (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isLessEqual
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
compareProperty CDATA #IMPLIED
compareValue CDATA #IMPLIED
>

<!--Checks to see if the value of a Collection, String or String.valueOf() property
is null or empty (“” or size() < 1).-->
<!ELEMENT isEmpty (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isEmpty
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks to see if the value of a Collection, String or String.valueOf() property
is not null and not empty (“” or size() < 1).
<br><br>
Example Usage:<br>
&lt;isNotEmpty prepend=”AND” property=”firstName” &gt;<br>
	FIRST_NAME=#firstName#<br>
&lt;/isNotEmpty&gt;-->
<!ELEMENT isNotEmpty (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isNotEmpty
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks to see if the parameter object is present (not null).-->
<!ELEMENT isParameterPresent (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isParameterPresent
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Checks to see if the parameter object is not present (null). -->
<!ELEMENT isNotParameterPresent (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST isNotParameterPresent
prepend CDATA #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
removeFirstPrepend (true|false) #IMPLIED
>

<!--Iterates over a property that is an implementation java.util.Collection, or
java.util.Iterator, or is an array.
<br><br>
Example Usage:<br>
&lt;iterate prepend=”AND” property=”userNameList” open=”(” close=”)” conjunction=”OR”&gt;<br>
	username=#userNameList[]#<br>
&lt;/iterate&gt;<br>
<br>
It is also possible to use the iterate when the collection is passed in as a
parameter to your mapped statement.
<br>
Example Usage:<br>
&lt;iterate prepend=”AND” open=”(” close=”)” conjunction=”OR”&gt;<br>
	username=#[]#<br>
&lt;/iterate&gt;<br>

Note: It is very important to include the square brackets[] at the end of the
property name when using the Iterate element. These brackets distinguish this
object as a collection to keep the parser from simply outputting the collection
as a string.-->
<!ELEMENT iterate (#PCDATA | include | iterate | isParameterPresent | isNotParameterPresent | isEmpty | isNotEmpty | isNotNull | isNull | isNotEqual | isEqual | isGreaterThan | isGreaterEqual | isLessThan | isLessEqual | isPropertyAvailable | isNotPropertyAvailable)*>
<!ATTLIST iterate
prepend CDATA #IMPLIED
property CDATA #IMPLIED
removeFirstPrepend (true|false|iterate) #IMPLIED
open CDATA #IMPLIED
close CDATA #IMPLIED
conjunction CDATA #IMPLIED
>
