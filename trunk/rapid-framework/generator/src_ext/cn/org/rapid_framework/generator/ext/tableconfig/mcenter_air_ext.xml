<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE table SYSTEM "rapid-ibatis-table-config.dtd">

<table sqlname="mcenter_air_ext"  remarks="用户信息表">
    <column name="service_fee" javatype="com.iwallet.biz.common.util.money.Money" />
	<column name="SERVICE_FEE" javatype="com.iwallet.biz.common.util.money.Money" />
	
	<column name="TOTAL_FEE" javatype="com.iwallet.biz.common.util.money.Money" />
	<column name="SERVICE_FEE_RATIO" javatype="double" />
	
	<column name="amount" javatype="com.iwallet.biz.common.util.money.Money" />
	<column name="AMOUNT" javatype="com.iwallet.biz.common.util.money.Money" />
	
	<column name="bank_amount" javatype="com.iwallet.biz.common.util.money.Money" />
	<column name="BANK_AMOUNT" javatype="com.iwallet.biz.common.util.money.Money" />
	
	<column name="return_fee" javatype="com.iwallet.biz.common.util.money.Money" />
	<column name="RETURN_FEE" javatype="com.iwallet.biz.common.util.money.Money" />
	
	<column name="count" javatype="long" />
	<column name="bank_pay_online_id" javatype="long" />
	<column name="iw_trans_log_id" javatype="long" />
	<column name="buyer_type" javatype="int" />
	<column name="seller_type" javatype="int" />
	
	<sql id="findTradeBaseForAir.where">
	
			<isEmpty property="direction">
			  	<isEmpty property="account">
					<isEmpty property="gmtCreateStartTime">
				  		<isEmpty property="gmtCreateEndTime">
				        	query not allowed
				  		</isEmpty>
					</isEmpty>
		  	  	</isEmpty>
	  	  	</isEmpty>
	  	  		
			<isNotEmpty property="partnerIds">
				and BTB.trade_email IN
				<iterate property="partnerIds" open="(" close=")" conjunction=",">
					#partnerIds[]#
				</iterate>
				<isEmpty prepend="and" property="account">
					BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					<isNotEmpty prepend="and" property="gmtCreateStartTime">
						BTB.gmt_create &gt;= #gmtCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateEndTime">
						BTB.gmt_create &lt;= #gmtCreateEndTime#
					</isNotEmpty>				
				</isEmpty>
			</isNotEmpty>
			
			<isNotEmpty property="account">
				<isEqual prepend="and" property="direction" compareValue="PAY">
					BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					and BTB.buyer_account = #account#
					<isNotEmpty prepend="and" property="oppositeAccount">
						BTB.seller_account = #oppositeAccount#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeNick">
						(BTB.seller_nick LIKE #oppositeNick#   OR BTB.seller_fullname LIKE #oppositeNick# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeFullName">
						(BTB.seller_nick LIKE #oppositeFullName#   OR BTB.seller_fullname LIKE #oppositeFullName# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeLoginName">
						BTB.seller_login_email LIKE #oppositeLoginName# 
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateStartTime">
						BTB.gmt_create &gt;= #gmtCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateEndTime">
						BTB.gmt_create &lt;= #gmtCreateEndTime#
					</isNotEmpty>
				</isEqual>
				<isEqual prepend="and" property="direction" compareValue="RECEIVE">
					BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					and BTB.seller_account = #account#
					<isNotEmpty prepend="and" property="oppositeAccount">
						BTB.buyer_account = #oppositeAccount#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeNick">
						(BTB.buyer_nick LIKE #oppositeNick#  OR BTB.buyer_fullname LIKE #oppositeNick# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeFullName">
						(BTB.buyer_nick LIKE #oppositeFullName#  OR BTB.buyer_fullname LIKE #oppositeFullName# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeLoginName">
						BTB.buyer_login_email LIKE #oppositeLoginName# 
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateStartTime">
						BTB.gmt_create &gt;= #gmtCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateEndTime">
						BTB.gmt_create &lt;= #gmtCreateEndTime#
					</isNotEmpty>
				</isEqual>
				<isEqual prepend="and" property="direction" compareValue="ALL">
					((
					BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					and BTB.buyer_account = #account# 
					<isNotEmpty prepend="and" property="oppositeAccount">
						(BTB.seller_account = #oppositeAccount#)
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeNick">
						(BTB.seller_nick LIKE #oppositeNick#   OR BTB.seller_fullname LIKE #oppositeNick# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeFullName">
						(BTB.seller_nick LIKE #oppositeFullName#   OR BTB.seller_fullname LIKE #oppositeFullName# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeLoginName">
						BTB.seller_login_email LIKE #oppositeLoginName# 
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateStartTime">
						BTB.gmt_create &gt;= #gmtCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateEndTime">
						BTB.gmt_create &lt;= #gmtCreateEndTime#
					</isNotEmpty>					
					)
					OR
					(
					BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					and BTB.seller_account = #account# 					
					<isNotEmpty prepend="and" property="oppositeAccount">
						BTB.buyer_account = #oppositeAccount#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeNick">
						(BTB.buyer_nick LIKE #oppositeNick#  OR BTB.buyer_fullname LIKE #oppositeNick# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeFullName">
						(BTB.buyer_nick LIKE #oppositeFullName#  OR BTB.buyer_fullname LIKE #oppositeFullName# )
					</isNotEmpty>
					<isNotEmpty prepend="and" property="oppositeLoginName">
						BTB.buyer_login_email LIKE #oppositeLoginName# 
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateStartTime">
						BTB.gmt_create &gt;= #gmtCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtCreateEndTime">
						BTB.gmt_create &lt;= #gmtCreateEndTime#
					</isNotEmpty>
					))					
				</isEqual>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="tradeNo">
				BTB.trade_no = #tradeNo#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="outTradeNo">
				BTB.out_trade_no = #outTradeNo#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="tradeTypes">
				BTB.trade_type IN
				<iterate property="tradeTypes" open="(" close=")" conjunction=",">
					#tradeTypes[]#
				</iterate>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="tradeStatuses">
				 BTB.trade_status IN
				<iterate property="tradeStatuses" open="(" close=")" conjunction=",">
					#tradeStatuses[]#
				</iterate>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="notInTradeStatuses">
				 BTB.trade_status NOT IN
				<iterate property="notInTradeStatuses" open="(" close=")" conjunction=",">
					#notInTradeStatuses[]#
				</iterate>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="goodsTitle">
				BTB.goods_title LIKE #goodsTitle# 
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="tradeFroms">
				BTB.trade_from IN
				<iterate property="tradeFroms" open="(" close=")" conjunction=",">
					#tradeFroms[]#
				</iterate>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="notInTradeFroms">
				BTB.trade_from NOT IN
				<iterate property="notInTradeFroms" open="(" close=")" conjunction=",">
					#notInTradeFroms[]#
				</iterate>
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="tradePriceDown">
					BTB.total_fee &gt;= #tradePriceDown#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="tradePriceUp">
					BTB.total_fee &lt;= #tradePriceUp#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="gmtLastModifiedDtStartTime">
					BTB.gmt_last_modified_dt &gt;= #gmtLastModifiedDtStartTime#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="gmtLastModifiedDtEndTime">
					BTB.gmt_last_modified_dt &lt;= #gmtLastModifiedDtEndTime#
			</isNotEmpty> 	
			
			<isNotEmpty prepend="and" property="pnr">
					MAE.pnr = #pnr#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="ticketNo">
					MAE.TICKET_NO_END >= #ticketNo#
					AND MAE.TICKET_NO_START &lt;= #ticketNo#
					AND length(MAE.TICKET_NO_END) >= length(#ticketNo#)
					AND length(MAE.TICKET_NO_START) &lt;= length(#ticketNo#)
			</isNotEmpty>
			
	</sql>

    <operation name="findTradeBaseForAir" paging="true" paramtype="primitive" multiplicity="one" remarks="航旅交易数据查询(信用支付/全部 )">
		<extraparams>
			<param name="payType" javatype="java.lang.String"/>	
			<param name="direction" javatype="java.lang.String"/>		
		</extraparams>    
    	<sql>
    		SELECT 
    		BTB.id,BTB.trade_no,BTB.out_trade_no,BTB.seller_account,BTB.seller_login_email,BTB.buyer_account,BTB.buyer_login_email,BTB.seller_type,BTB.buyer_type,BTB.trade_from,BTB.trade_email,BTB.operator_role,BTB.trade_status,BTB.total_fee,BTB.service_fee_ratio,BTB.service_fee,BTB.currency,BTB.seller_action,BTB.buyer_action,BTB.gmt_create,BTB.seller_user_id,BTB.buyer_user_id,BTB.additional_trd_status,BTB.trade_type,BTB.seller_fullname,BTB.buyer_fullname,BTB.seller_nick,BTB.buyer_nick,BTB.goods_title,BTB.gmt_last_modified_dt,BTB.stop_timeout,BTB.gathering_type,BTB.buyer_marker,BTB.seller_marker,BTB.buyer_marker_memo,BTB.seller_marker_memo,BTB.channel,BTB.product,BTB.pay_channel,
    		MAE.PNR,MAE.TICKET_NO_START,MAE.TICKET_NO_END,MAE.system_partner,
    		MC.loan_success,MC.pay_success
    		FROM trade_base BTB 
				left join mcenter_air_ext MAE on BTB.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
    			left join mcenter_creditpay MC on BTB.trade_no = MC.trade_no AND MC.pay_success = 'Y'
    		WHERE 1 = 1
    		
			<include refid='findTradeBaseForAir.where'/>

			<isEqual prepend="and" property="payType" compareValue="CREDIT_PAY">
					MC.pay_success = 'Y'
			</isEqual>	
						
			<isEqual property="orderby" compareValue="GMT_CREATE_ASC">
				order by BTB.GMT_CREATE ASC
			</isEqual>
			
			<isEqual property="orderby" compareValue="GMT_CREATE_DESC">
				order by BTB.GMT_CREATE DESC
			</isEqual>
			
			<isEqual property="orderby" compareValue="GMT_LAST_MODIFIED_DT_ASC">
				order by BTB.GMT_LAST_MODIFIED_DT ASC
			</isEqual>
			
			<isEqual property="orderby" compareValue="GMT_LAST_MODIFIED_DT_DESC">
				order by BTB.GMT_LAST_MODIFIED_DT DESC
			</isEqual>		
		</sql>
    </operation>

    <operation name="countAndSumTradeBaseForAir" paramtype="primitive" multiplicity="one" remarks="航旅交易数据汇总查询(信用支付/全部 )">
		<extraparams>
			<param name="payType" javatype="java.lang.String"/>	
			<param name="direction" javatype="java.lang.String"/>		
		</extraparams>    
    	<sql>
    		SELECT 
    			count(BTB.trade_no) count,sum(BTB.total_fee) sum_amount
    		FROM trade_base BTB 
				left join mcenter_air_ext MAE on BTB.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
    			left join mcenter_creditpay MC on BTB.trade_no = MC.trade_no AND MC.pay_success = 'Y'
    		WHERE 1 = 1
    		
			<include refid='findTradeBaseForAir.where'/>	
			
			<isEqual prepend="and" property="payType" compareValue="CREDIT_PAY">
					MC.pay_success = 'Y'
			</isEqual>			
		</sql>
    </operation>


    <operation name="findTradeBaseForAirByBalance" paging="true" paramtype="primitive" multiplicity="one" remarks="航旅交易数据查询(余额支付)">
		<extraparams>
			<param name="payType" javatype="java.lang.String"/>	
			<param name="direction" javatype="java.lang.String"/>		
		</extraparams>    
    	<sql>
    		SELECT 
    		BTB.id,BTB.trade_no,BTB.out_trade_no,BTB.seller_account,BTB.seller_login_email,BTB.buyer_account,BTB.buyer_login_email,BTB.seller_type,BTB.buyer_type,BTB.trade_from,BTB.trade_email,BTB.operator_role,BTB.trade_status,BTB.total_fee,BTB.service_fee_ratio,BTB.service_fee,BTB.currency,BTB.seller_action,BTB.buyer_action,BTB.gmt_create,BTB.seller_user_id,BTB.buyer_user_id,BTB.additional_trd_status,BTB.trade_type,BTB.seller_fullname,BTB.buyer_fullname,BTB.seller_nick,BTB.buyer_nick,BTB.goods_title,BTB.gmt_last_modified_dt,BTB.stop_timeout,BTB.gathering_type,BTB.buyer_marker,BTB.seller_marker,BTB.buyer_marker_memo,BTB.seller_marker_memo,BTB.channel,BTB.product,BTB.pay_channel,
    		MAE.PNR,MAE.TICKET_NO_START,MAE.TICKET_NO_END,MAE.system_partner
    		FROM trade_base BTB 
				left join mcenter_air_ext MAE on BTB.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
    		WHERE 1 = 1
    		
			<include refid='findTradeBaseForAir.where'/>

			and not exists (select 1 from mcenter_creditpay MC where MC.trade_no = BTB.trade_no and MC.pay_success = 'Y')
	
			<isEqual property="orderby" compareValue="GMT_CREATE_ASC">
				order by BTB.GMT_CREATE ASC
			</isEqual>
			
			<isEqual property="orderby" compareValue="GMT_CREATE_DESC">
				order by BTB.GMT_CREATE DESC
			</isEqual>
			
			<isEqual property="orderby" compareValue="GMT_LAST_MODIFIED_DT_ASC">
				order by BTB.GMT_LAST_MODIFIED_DT ASC
			</isEqual>
			
			<isEqual property="orderby" compareValue="GMT_LAST_MODIFIED_DT_DESC">
				order by BTB.GMT_LAST_MODIFIED_DT DESC
			</isEqual>		
		</sql>
    </operation>

    <operation name="countAndSumTradeBaseForAirByBalance" paramtype="primitive" multiplicity="one" remarks="航旅交易数据汇总查询(余额支付)">
		<extraparams>
			<param name="payType" javatype="java.lang.String"/>	
			<param name="direction" javatype="java.lang.String"/>		
		</extraparams>    
    	<sql>
    		SELECT 
    			count(BTB.trade_no) count,sum(BTB.total_fee) sum_amount
    		FROM trade_base BTB 
				left join mcenter_air_ext MAE on BTB.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
    		WHERE 1 = 1
    		
			<include refid='findTradeBaseForAir.where'/>	
			
			and not exists (select 1 from mcenter_creditpay MC where MC.trade_no = BTB.trade_no and MC.pay_success = 'Y')		
		</sql>
    </operation>
    
   	<sql id="findTradeFundBillForAir.where">
			<isEmpty property="direction">
			  	<isEmpty property="account">
					<isEmpty property="gmtTradeCreateStartTime">
				  		<isEmpty property="gmtTradeCreateEndTime">
				        	query not allowed
				  		</isEmpty>
					</isEmpty>
		  	  	</isEmpty>
	  	  	</isEmpty>
	  	  		
			<isNotEmpty property="partnerIds">
				<isEmpty prepend="and" property="account">
					BTF.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					<isNotEmpty prepend="and" property="gmtTradeCreateStartTime">
						BTF.gmt_trade_create &gt;= #gmtTradeCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtTradeCreateEndTime">
						BTF.gmt_trade_create &lt;= #gmtTradeCreateEndTime#
					</isNotEmpty>					
				</isEmpty>
				
				 and BTF.partner_id IN
				<iterate property="partnerIds" open="(" close=")" conjunction=",">
					#partnerIds[]#
				</iterate>
			</isNotEmpty>

			<isNotEmpty prepend="and" property="tradeNo">
				BTF.trade_no = #tradeNo#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="outTradeNo">
				BTF.out_order_no = #outTradeNo#
			</isNotEmpty>
			
			<isNotEmpty property="account">
				<isEqual prepend="and" property="direction" compareValue="PAY">
					BTF.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					and BTF.pay_account_no = #account#
					<isNotEmpty prepend="and" property="gmtTradeCreateStartTime">
							BTF.gmt_trade_create &gt;= #gmtTradeCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtTradeCreateEndTime">
							BTF.gmt_trade_create &lt;= #gmtTradeCreateEndTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="otherAccountNo">
						BTF.receive_account_no = #otherAccountNo#
					</isNotEmpty>					
				</isEqual>
				<isEqual prepend="and" property="direction" compareValue="RECEIVE">
					BTF.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					and BTF.receive_account_no = #account#
					<isNotEmpty prepend="and" property="gmtTradeCreateStartTime">
							BTF.gmt_trade_create &gt;= #gmtTradeCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtTradeCreateEndTime">
							BTF.gmt_trade_create &lt;= #gmtTradeCreateEndTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="otherAccountNo">
						BTF.pay_account_no = #otherAccountNo#
					</isNotEmpty>										
				</isEqual>
				<isEqual prepend="and" property="direction" compareValue="ALL">
					(
					(BTF.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					 	and BTF.pay_account_no = #account#
					<isNotEmpty prepend="and" property="otherAccountNo">
						BTF.receive_account_no = #otherAccountNo#
					</isNotEmpty>					 	
					 <isNotEmpty prepend="and" property="gmtTradeCreateStartTime">
						BTF.gmt_trade_create &gt;= #gmtTradeCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtTradeCreateEndTime">
						BTF.gmt_trade_create &lt;= #gmtTradeCreateEndTime#
					</isNotEmpty>
					)
					 OR 
					(BTF.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
					 	and BTF.receive_account_no = #account#
					<isNotEmpty prepend="and" property="otherAccountNo">
						BTF.pay_account_no = #otherAccountNo#
					</isNotEmpty>					 	
					<isNotEmpty prepend="and" property="gmtTradeCreateStartTime">
							BTF.gmt_trade_create &gt;= #gmtTradeCreateStartTime#
					</isNotEmpty>
					<isNotEmpty prepend="and" property="gmtTradeCreateEndTime">
							BTF.gmt_trade_create &lt;= #gmtTradeCreateEndTime#
					</isNotEmpty>
					 ))
				</isEqual>
			</isNotEmpty>


						
			<isNotEmpty prepend="and" property="memo">
				BTF.memo like #memo# 
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="fundFlowTypes">
				 BTF.type IN
				<iterate property="fundFlowTypes" open="(" close=")" conjunction=",">
					#fundFlowTypes[]#
				</iterate>
			</isNotEmpty>

			<isNotEmpty prepend="and" property="minAmount">
				BTF.amount >= #minAmount#
			</isNotEmpty>

			<isNotEmpty prepend="and" property="maxAmount">
				BTF.amount &lt;= #maxAmount#
			</isNotEmpty>
									
			<isNotEmpty prepend="and" property="fundBillStatuses">
				 BTF.status IN
				<iterate property="fundBillStatuses" open="(" close=")" conjunction=",">
					#fundBillStatuses[]#
				</iterate>
			</isNotEmpty>
						
			<isNotEmpty prepend="and" property="gmtPayStartTime">
					BTF.gmt_pay &gt;= #gmtPayStartTime#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="gmtPayEndTime">
					BTF.gmt_pay &lt;= #gmtPayEndTime#
			</isNotEmpty>
			
			<isNotEmpty prepend="and" property="pnr">
					MAE.pnr = #pnr#
			</isNotEmpty>
			<isNotEmpty prepend="and" property="ticketNo">
					MAE.TICKET_NO_END >= #ticketNo#
					AND MAE.TICKET_NO_START &lt;= #ticketNo#
					AND length(MAE.TICKET_NO_END) >= length(#ticketNo#)
					AND length(MAE.TICKET_NO_START) &lt;= length(#ticketNo#)
			</isNotEmpty>	
			

			<isNotEmpty prepend="and" property="buyerLoginEmail">
				BTB.buyer_login_email = #buyerLoginEmail# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="sellerLoginEmail">
				BTB.seller_login_email = #sellerLoginEmail# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="sellerAccount">
				BTB.seller_account = #sellerAccount# 
			</isNotEmpty>
			<isNotEmpty prepend="and" property="buyerAccount">
				BTB.buyer_account = #buyerAccount# 
			</isNotEmpty>	
	</sql>
	
	<operation name="findTradeFundBillForAir" paging="true" paramtype="primitive" remarks="退款明细查询(全部，信用支付）">
		<extraparams>
			<param name="payType" javatype="java.lang.String"/>	
			<param name="direction" javatype="java.lang.String"/>		
		</extraparams>	
    	<sql>
    	SELECT BTF.bill_no,BTF.trade_no,BTF.out_order_no,BTF.pay_account_no,BTF.receive_account_no,BTF.currency,BTF.amount,BTF.type,BTF.status,BTF.channel,BTF.gmt_pay,iw_trans_log_id,BTF.gmt_trade_create,BTF.gmt_create,BTF.gmt_modified,BTF.memo,bank_pay_online_id,bank_amount,bank_type,freeze_type,partner_id,deposit_id,
    		PNR,MAE.TICKET_NO_START,MAE.TICKET_NO_END,MAE.system_partner,
    		MC.loan_success,MC.pay_success,
    		seller_account,seller_login_email,buyer_account,buyer_login_email,seller_type,buyer_type,trade_from,trade_email,operator_role,trade_status,total_fee,service_fee_ratio,service_fee,seller_action,buyer_action,seller_user_id,buyer_user_id,additional_trd_status,trade_type,seller_fullname,buyer_fullname,seller_nick,buyer_nick,goods_title,gmt_last_modified_dt,stop_timeout,gathering_type,buyer_marker,seller_marker,buyer_marker_memo,seller_marker_memo,product,pay_channel
    	from trade_fund_bill BTF
			left join mcenter_air_ext MAE on BTF.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
    		left join mcenter_creditpay MC on BTF.trade_no = MC.trade_no AND MC.pay_success = 'Y'
    		inner join trade_base BTB on BTB.trade_no = BTF.trade_no AND BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate> 
    	WHERE 1=1
    		
			<include refid='findTradeFundBillForAir.where'/>
				
			<isEqual prepend="and" property="payType" compareValue="CREDIT_PAY">
					MC.pay_success = 'Y'
			</isEqual>
						
			<isNotEmpty prepend="" property="orderby">
				<isEqual prepend="" property="orderby" compareValue="GMT_CREATE_ASC">
					order by BTF.GMT_CREATE ASC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_CREATE_DESC">
					order by BTF.GMT_CREATE DESC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_PAY_ASC">
					order by BTF.GMT_PAY ASC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_PAY_DESC">
					order by BTF.GMT_PAY DESC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_LAST_MODIFIED_DT_ASC">
					order by GMT_MODIFIED ASC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_LAST_MODIFIED_DT_DESC">
					order by GMT_MODIFIED DESC
				</isEqual>								
			</isNotEmpty>
		</sql>
    </operation> 
    
	<operation name="findTradeFundBillForAirByBalance" paging="true" paramtype="primitive" remarks="退款明细查询(余额支付)">
		<extraparams>
			<param name="payType" javatype="java.lang.String"/>	
			<param name="direction" javatype="java.lang.String"/>		
		</extraparams>	
    	<sql>
    	SELECT BTF.bill_no,BTF.trade_no,BTF.out_order_no,BTF.pay_account_no,BTF.receive_account_no,BTF.currency,BTF.amount,BTF.type,BTF.status,BTF.channel,BTF.gmt_pay,iw_trans_log_id,BTF.gmt_trade_create,BTF.gmt_create,BTF.gmt_modified,BTF.memo,bank_pay_online_id,bank_amount,bank_type,freeze_type,partner_id,deposit_id,
    		PNR,MAE.TICKET_NO_START,MAE.TICKET_NO_END,MAE.system_partner,
    		seller_account,seller_login_email,buyer_account,buyer_login_email,seller_type,buyer_type,trade_from,trade_email,operator_role,trade_status,total_fee,service_fee_ratio,service_fee,seller_action,buyer_action,seller_user_id,buyer_user_id,additional_trd_status,trade_type,seller_fullname,buyer_fullname,seller_nick,buyer_nick,goods_title,gmt_last_modified_dt,stop_timeout,gathering_type,buyer_marker,seller_marker,buyer_marker_memo,seller_marker_memo,product,pay_channel
    	from trade_fund_bill BTF
			left join mcenter_air_ext MAE on BTF.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
    		inner join trade_base BTB on BTB.trade_no = BTF.trade_no AND BTB.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate> 
    	WHERE 1=1
    		
			<include refid='findTradeFundBillForAir.where'/>
			and not exists (select 1 from mcenter_creditpay MC where MC.trade_no = BTF.trade_no and MC.pay_success = 'Y')
						
			<isNotEmpty prepend="" property="orderby">
				<isEqual prepend="" property="orderby" compareValue="GMT_CREATE_ASC">
					order by BTF.GMT_CREATE ASC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_CREATE_DESC">
					order by BTF.GMT_CREATE DESC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_PAY_ASC">
					order by BTF.GMT_PAY ASC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_PAY_DESC">
					order by BTF.GMT_PAY DESC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_LAST_MODIFIED_DT_ASC">
					order by GMT_MODIFIED ASC
				</isEqual>
				<isEqual prepend="" property="orderby" compareValue="GMT_LAST_MODIFIED_DT_DESC">
					order by GMT_MODIFIED DESC
				</isEqual>								
			</isNotEmpty>
		</sql>
    </operation> 
       
	<operation name="findCreditpayRefundDetail" paging="true" paramtype="primitive" remarks="信用支付退款明细分页查询">
		<sql>
	    	SELECT BTF.trade_no,out_order_no,pay_account_no,receive_account_no,BTF.currency,BTF.amount refundAmount,type,status,BTF.channel,gmt_pay,iw_trans_log_id,BTF.gmt_trade_create,BTF.gmt_modified,BTF.memo,bank_pay_online_id,bank_amount,bank_type,freeze_type,partner_id,deposit_id,
	    		PNR,MAE.TICKET_NO_START,MAE.TICKET_NO_END,MAE.system_partner,
	    		MC.bill_no,MC.TRANS_DATE,MC.TRANS_ACCOUNT_OUT,MC.TRANS_ACCOUNT_IN,MC.CUSTOMER_ID,MC.BIZ_NAME,MC.OPERATOR_ID,MC.OPERATOR_NAME,MC.loan_success,MC.pay_success,
	    		MC.amount amount,BTF.gmt_trade_create gmt_create
	    	from trade_fund_bill BTF
				left join mcenter_air_ext MAE on BTF.trade_no = MAE.trade_no  AND MAE.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
	    		inner join mcenter_creditpay MC on BTF.trade_no = MC.trade_no AND MC.pay_success = 'Y'
	    	WHERE   
			  	<isEmpty property="transAccountIn">
					<isEmpty property="gmtTradeCreateBegin">
				  		<isEmpty property="gmtTradeCreateEnd">
				        	query not allowed
				  		</isEmpty>
					</isEmpty>
		  	  	</isEmpty>

				BTF.owner IN <iterate property="owner" open="(" close=")" conjunction=",">#owner[]#</iterate>
				AND BTF.receive_account_no = #transAccountIn#
				
				<isNotEmpty prepend="and" property="gmtTradeCreateBegin">
						BTF.gmt_trade_create &gt;= #gmtTradeCreateBegin#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="gmtTradeCreateEnd">
						BTF.gmt_trade_create &lt;= #gmtTradeCreateEnd#
				</isNotEmpty>
				
				<isNotEmpty prepend='and' property='gmtPayBegin'>
						BTF.gmt_pay >= #gmtPayBegin#
				</isNotEmpty>
				<isNotEmpty prepend='and' property='gmtPayEnd'>
						BTF.gmt_pay &lt; #gmtPayEnd#
				</isNotEmpty>
									
		       <isNotEmpty prepend="AND" property="tradeNo">
		             BTF.TRADE_NO = #tradeNo#
		       </isNotEmpty>
		       								  	  	   	
				<isNotEmpty prepend="and" property="billNo">
						MC.bill_no = #billNo#
				</isNotEmpty>		    
		       <isNotEmpty prepend="AND" property="amount">
		             MC.AMOUNT = #amount#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="transDate">
		             MC.TRANS_DATE = #transDate#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="transAccountOut">
		             MC.TRANS_ACCOUNT_OUT = #transAccountOut#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="customerId">
		             MC.CUSTOMER_ID = #customerId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="bizName">
		             MC.BIZ_NAME = #bizName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="operatorId">
		             MC.OPERATOR_ID = #operatorId#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="operatorName">
		             MC.OPERATOR_NAME = #operatorName#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="memo">
		             MC.MEMO = #memo#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="recordStamp">
		             MC.RECORD_STAMP = #recordStamp#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="loanSuccess">
		             MC.loan_success = #loanSuccess#
		       </isNotEmpty>
		       <isNotEmpty prepend="AND" property="paySuccess">
		             MC.pay_success = #paySuccess#
		       </isNotEmpty>

				<isNotEmpty prepend="and" property="pnr">
					MAE.pnr = #pnr#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="ticketNo">
						MAE.TICKET_NO_END >= #ticketNo#
						AND MAE.TICKET_NO_START &lt;= #ticketNo#
						AND length(MAE.TICKET_NO_END) >= length(#ticketNo#)
						AND length(MAE.TICKET_NO_START) &lt;= length(#ticketNo#)
				</isNotEmpty>

		       <isNotEmpty prepend="AND" property="outTradeNo">
		             BTF.out_order_no = #outTradeNo#
		       </isNotEmpty>				
				<isNotEmpty prepend="and" property="fundFlowTypes">
					 BTF.type IN
					<iterate property="fundFlowTypes" open="(" close=")" conjunction=",">
						#fundFlowTypes[]#
					</iterate>
				</isNotEmpty>
				
	    		order by BTF.gmt_trade_create DESC,gmt_pay DESC
		</sql>		
	</operation> 	    	         			
</table>
