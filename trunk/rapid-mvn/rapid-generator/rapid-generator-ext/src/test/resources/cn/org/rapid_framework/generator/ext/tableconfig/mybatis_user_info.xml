<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE table SYSTEM "rapid-mybatis-table-config.dtd">
<table sqlname="user_info" doname="MyBatisUserInfo" dummypk="user_id" sequence="SEQ_BBCC_CUSTOMER" subpackage="mybatis_subpackage" package="com.qq" autoswitchdatasrc="false" remarks="用户信息表">
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="UserInfo.columns">
	    <![CDATA[
		USER_ID,USERNAME,PASSWORD,BIRTH_DATE,SEX,AGE
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql  useGeneratedKeys="true" keyProperty="userId"-->
	<operation name="UserInfo.insert" >
	<sql>
    <![CDATA[
        INSERT INTO USER_INFO (
        	USER_ID ,
        	USERNAME ,
        	PASSWORD ,
        	BIRTH_DATE ,
        	SEX ,
        	AGE 
        ) VALUES (
        	#{userId} ,
        	#{username} ,
        	#{password} ,
        	#{birthDate} ,
        	#{sex} ,
        	#{age} 
        )
    ]]>
	</sql>
	</operation>
    
	<operation name="UserInfo.update" >
	<sql>
    <![CDATA[
        UPDATE USER_INFO SET
	        USERNAME = #{username} ,
	        PASSWORD = #{password} ,
	        BIRTH_DATE = #{birthDate} ,
	        SEX = #{sex} ,
	        AGE = #{age} 
        WHERE 
	        USER_ID = #{userId} 
    ]]>
	</sql>
	</operation>

    <operation name="UserInfo.delete">
    <sql>
    <![CDATA[
        DELETE FROM USER_INFO WHERE
        USER_ID = #{id} 
    ]]>
    </sql>
    </operation>
    
    <!-- resultMap="RM.UserInfo" -->
    <operation name="UserInfo.getById" >
    <sql>
		SELECT <include refid="UserInfo.columns" />
	    <![CDATA[
		    FROM USER_INFO 
	        WHERE 
		        USER_ID = #{id} 
	    ]]>
	</sql>
	</operation>
	
	<sql id="UserInfo.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(userId)">
				AND USER_ID = #{userId}
			</if>
	       <if test="@Ognl@isNotEmpty(username)">
				AND USERNAME = #{username}
			</if>
	       <if test="@Ognl@isNotEmpty(password)">
				AND PASSWORD = #{password}
			</if>
	       <if test="@Ognl@isNotEmpty(birthDateBegin)">
				AND BIRTH_DATE >= #{birthDateBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(birthDateEnd)">
				AND BIRTH_DATE &lt;= #{birthDateEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(sex)">
				AND SEX = #{sex}
			</if>
	       <if test="@Ognl@isNotEmpty(age)">
				AND AGE = #{age}
			</if>
			<choose>
				<when test="@Ognl@isNotEmpty(sex)">AND sex = #{sexWhen}</when>
				<when test="@Ognl@isNotEmpty(sex)">AND age = #{ageWhen}</when>
				<otherwise>AND BIRTH_DATE = #{birthDateOtherwise}</otherwise>
			</choose>
			and username in 
			<foreach collection="usernamesByItem" item="item" index="index" open="(" separator="," close=")">  
        		#{item} 
   			</foreach> 
   			and username in 
   			<foreach collection="usernamesByIndexDollar" item="item" index="index" open="(" separator="," close=")">  
       		#{usernamesByIndex[${index}]}
  			</foreach> 	
  			
  			and username in 
   			<foreach collection="usernamesByIndex" item="item" index="index" open="(" separator="," close=")">  
       		#{usernamesByIndex[index]}
  			</foreach> 			
		</where>
	</sql>
		
	<!-- resultType="long" -->
    <operation name="UserInfo.findPage.count" >
    	<sql>
        SELECT count(*) FROM USER_INFO 
		<include refid="UserInfo.findPage.where"/>    
		</sql>
    </operation>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    	
    	resultMap="RM.UserInfo"
    -->
    <operation name="UserInfo.findPage" >
    	<sql>
    	SELECT <include refid="UserInfo.columns" />
	    FROM USER_INFO 
		<include refid="UserInfo.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
		</sql>
    </operation>
	
	<!-- resultMap="RM.UserInfo" parameterType="java.lang.String" -->
    <operation name="UserInfo.getByUsername" >
    	<sql>
	    SELECT <include refid="UserInfo.columns"/>
	    <![CDATA[
	        FROM USER_INFO where USERNAME = #{username}
	    ]]>
	    </sql>
    </operation>
    
    <!-- resultMap="RM.UserInfo" parameterType="java.lang.Integer" -->
    <operation name="UserInfo.getByAge" >
    	<sql>
	    SELECT <include refid="UserInfo.columns"/>
	    <![CDATA[
	        FROM USER_INFO where AGE = #{age}
	    ]]>
	    </sql>
    </operation>      			
</table>
