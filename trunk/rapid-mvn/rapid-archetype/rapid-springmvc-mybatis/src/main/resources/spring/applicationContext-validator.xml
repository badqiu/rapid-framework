<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	   default-autowire="byName" default-lazy-init="false">
	
	<!-- 可以在国际化文件中使用如key: NotBlank.userInfo.username 或是@NotBlank(message="用户名不能为空") -->
	
	<!-- 用于启用Hibernate Validator,并且使用spring MessageSource替换java ResourceBundle -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
		<property name="validationMessageSource" ref="messageSource"/>
	</bean>
    
    <!-- 用于持有Spring Validator,可以将 Validator当做静态方法调用,示例:SpringValidatorHolder.validate(blogBean) -->
    <bean class="cn.org.rapid_framework.util.holder.SpringValidatorHolder">
    	<property name="validator" ref="validator"/>
    </bean>
     
    <!-- 用于持有JSR303 Validator(Hibernate Validator),可以将Validator当做静态方法调用,示例:BeanValidatorHolder.validate(blogBean) -->
    <bean class="cn.org.rapid_framework.util.holder.BeanValidatorHolder">
 	 	<property name="validator" ref="validator"/>
 	</bean>
   
    
</beans>